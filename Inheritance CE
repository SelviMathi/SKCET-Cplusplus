1.Multilevel Inheritance:

Create a class 'Parent'. 'Parent' class should have a method 'add' which prints the addition of 2 integers. Create a class 'Child1' which should be a child class of 'Parent' class. 'Child' class should have a method 'sub' which prints subtraction of 2 integers. Create a class 'Child2' which should be a child class of 'child1' class. 'Child' class should have a method 'mul' which prints multiplication of 2 integers. Create an object for a 'Child' class. Call the 3 methods to add, sub and mul from child class object and display the result.

// You are using GCC
#include<iostream>
using namespace std;
class Parent
{
    public:
    int num1,num2;
    void add()
    {
        cout<<num1+num2<<endl;
    }
};
class Child1:public Parent
{
   public: 
    void sub()
    {
        cout<<num1-num2<<endl;
    }
};
class Child2:public Child1
{
   public:
   void mul()
    {
        cout<<num1*num2<<endl;
    }
};
    int main()
{
   Child2 obj;
   cin>>obj.num1>>obj.num2;
   obj.add();
   obj.sub();
   obj.mul();
   return 0;
}


2.Single inheritance
// You are using GCC
// You are using GCC
#include<iostream>
using namespace std;
class Parent
{
    public:
    int num1,num2;
    void add()
    {
        cout<<num1+num2<<endl;
    }
};
class Child1:public Parent
{
   public: 
    void sub()
    {
        cout<<num1-num2<<endl;
    }
};

    int main()
{
   Child1 obj;
   cin>>obj.num1>>obj.num2;
   obj.add();
   obj.sub();
   return 0;
}

3.Write a program to implement the following logic using inheritance.

Create a parent class and implement the fun method. In the method, get the individual digits of the entered number, store it in an array, and find their sum.

For example in case of 1234, the individual digits are 4,3,2,1 and the final sum â†’ (4+3)+(4+2)+(4+1)+(3+2)+(3+1)+(2+1) = 30.

Create the main class that inherits the parent class and call the fun method inside the parent function.


#include<bits/stdc++.h>
#include<string>
using namespace std;
class Parent {
    public:
        int num;
};
class Child : public Parent {
    public:
        void fun()
        {
           int i,j,k=0,sum=0;
           int a[10];
           while(num!=0)
           {
           i=num%10;
           a[k++]=i;
           num=num/10;
           }
           if(k==1){
           cout<<a[0];
           return;
           }
           for(i=0;i<k-1;i++)
           for(j=i+1;j<k;j++)
           sum=sum+a[i]+a[j];
           cout<<sum;
    }
};
int main() {
    Child c;
    cin>>c.num;
    c.fun();
}

4.Write a program by creating a class Bicycle as a base class with a number of gears and speed of bicycle as integer attributes and create a class called MountainBike, a derived class that extends Bicycle class with an attribute seat height as an integer. In the main method, Obtain the inputs and display the same

#include<bits/stdc++.h>
#include<string>
using namespace std;
class Bicycle 
{
    public:
    int gear;
    int speed;
         
    void input(int gear, int speed)
    {
        gear = gear;
        speed = speed;
    }
         
    void applyBrake(int decrement)
    {
        speed -= decrement;
    }
         
    void speedUp(int increment)
    {
        speed += increment;
    }
    void display() {
        cout<<gear<<" "<<speed;
    }
};
 
class MountainBike : public Bicycle
{
    public:
    int seatHeight;
 
    void input(int gear,int speed,
                        int startHeight)
    {
        Bicycle :: input(gear,speed);
        seatHeight = startHeight;
    } 
         
    void setseatHeight(int newValue)
    {
        seatHeight = newValue;
    } 
    void display() {
        cout<<"\n"<<seatHeight;
    }
     
};
    int main()
    {
        Bicycle b;
        cin>>b.gear>>b.speed;
        b.display();
        MountainBike mb;
        cin>>mb.seatHeight;
        mb.display();
             
    }

5.Hybrid Inheritance

Create a class 'Parent'. 'Parent' class should have a method 'add' which prints the addition of 2 integers. Create a class 'child1' which should be a 'child' class of 'parent' class.it has a method 'sub' which prints subtraction of 2 integers. Create a class 'child2' which should be a child class of 'Parent' class. 'Child2' class should have a method 'mul' which prints multiplication of 2 integers.

Create a class 'child3' which should be a child class of 'child1' class and 'child2' class. 'Child3' class should have a method 'div' which prints the division of 2 integers. Create an object for a 'Child3' class. Call the 4 methods to add, sub, mul, and div from the child1 class object and display the result.
#include<iostream>
#include<string.h>
#include<stdio.h>
using namespace std;
class parent
{
    public:
    void add(int a,int b)
    {
        cout<<a+b<<endl;
    }
};
class child1:public parent
{
    public:
    void sub(int a,int b)
    {
        //explicitly calling the add method from the parent class.
        parent::add(a,b);
        cout<<a-b<<endl;
    }
};
class child2: public parent
{
    public:
    void mul(int a,int b)
    {
        cout<<a*b<<endl;
    }
};
class child3:public child1,public child2
{
    public:
    void divi(int a,int b)
    {
        cout<<a/b;
    }
};
int main()
{
    int a,b;
    cin>>a>>b;
    child3 c;
    //parent p;
    //p.add(a,b);
    c.sub(a,b);
    c.mul(a,b);
  c.divi(a,b);
}
