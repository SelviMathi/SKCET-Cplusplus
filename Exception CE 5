1. Drivimg license
#include <bits/stdc++.h>       
using namespace std;
int main() {
    int age,score;
    cin>>age>>score;
    cout<<age<<" "<<score<<"\n";
    try {
    if(age<18)
    {
        throw(age);
    }
    else
    {
        try {
            if(score<40)
            {
                throw(score);
            }
        }
        catch(int e) {
            cout<<"You should get atleast 40 marks";
        }
        if(score>=40)
        {
            cout<<"Passed";   
        }
    }
    }
    catch (int e)
    {
        cout<<"Invalid age"<<"\n";
    }
}

2. Vowels from file
string a;
    getline(cin,a);
    fout<<a;
    fout.close();
    ifstream fin;
    fin.open("sample.txt");
    string str;
    getline(fin,str);
    int count=0;
    for(char c:str){
        if(c=='a' || c=='e' || c=='i' || c=='o' || c=='u' || 
            c=='A' || c=='E' || c=='I' || c=='O' || c=='U'){
                count++;
            }
    }
    cout<<"Number of vowels in file are "<<count;


3.sort from files
fstream file;
   file.open("sample.dat",ios::out);
   ofstream outdata;
   int i,j,n,a;
   cin>>n;
   int number[n];
 for (i=0; i<n; ++i)
 {
   cin>>number[i];
 }
 outdata.open("sample.dat"); 
for (i=0; i<n; ++i)
{
      outdata<<number[i]<<endl;
}
   outdata.close();
for (i = 0; i < n; i++)
    {
        for (j = 0; j < (n - i - 1); j++)
        {
            if (number[j] > number[j + 1])
            {
                a = number[j];
                number[j] = number[j + 1];
                number[j + 1] = a;
            }
        }
    }
 
        for (i = 0; i < n; i++) 
        {
            cout<<number[i]<<"\n";
        }4.insert at position
#include <iostream>
#include <stdexcept>

int main() {
    int n;
    std::cin >> n;

    int* myArray = new int[n];
for (int i = 0; i < n; i++) {
        std::cin >> myArray[i];
    }

    int position, value;
    std::cin >> position >> value;

    try {
        if (position < 0 || position >= n) {
            throw std::out_of_range("Index out of bounds");
        }
        myArray[position] = value;
    } catch (const std::out_of_range& oor) {
        std::cout << oor.what() << "\n";
    }

    for (int i = 0; i < n; i++) {
        std::cout << myArray[i] << " ";
    }

    delete[] myArray; // Don't forget to free the memory allocated for the array.
    return 0;
}
5.Data type Exception
#include<bits/stdc++.h>
using namespace std;
int main()
{
    int a;
    cin>>a;
    try
        {
            if(a==1)
                throw a;                  
            else if(a==2)
                throw 'A'; 
            else if(a==3)
                throw 4.5;                
        }
        catch(int a)
            {
                cout<<"Integer exception caught.\n";
             }
        catch(char ch)
            {
                cout<<"Character exception caught.\n";
            }
        catch(double d)
            {
                cout<<"Double exception caught.\n";
            }
}
