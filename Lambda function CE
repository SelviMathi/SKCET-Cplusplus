1.Sum using ilnine lambda function

#include <iostream>
#include <string>
using namespace std;
int main()
   {
      auto sum = [](int a, int b) 
      {
      return a + b;
      };
      int a,b;
   cin>>a>>b;
   cout <<sum(a, b) << endl;
   return 0;
   }
2.First even elements in list
#include <list>
#include <algorithm>
#include <iostream>
using namespace std;
int main()
{
    list<int> numbers;
    int i,n,element;
    cin>>n;
    for(i=0;i<n;i++) {
        cin>>element;
        numbers.push_back(element);
    }
    const list<int>::const_iterator result =
        find_if(numbers.begin(), numbers.end(),[](int n) { return (n % 2) == 0; });
    if (result != numbers.end()) {
        cout << "The first even number in the list is " << *result << "." << endl;
    } else {
        cout << "The list contains no even numbers." << endl;
    }
}
3.Sort descending in vector
#include <algorithm>
#include <iostream>
#include <string>
#include <vector>
using namespace std;
int main()
{
    auto greater = [](auto a, auto b) -> bool 
    {
        return a > b;
    };
    int i,n,ele1;
    cin>>n;
    vector<int> vi;
    for(i=0;i<n;i++)
    {
        cin>>ele1;
        vi.push_back(ele1);
    }
    sort(vi.begin(), vi.end(), greater);
    for (int i = 0; i < vi.size(); i++) 
    {
        cout << vi[i] << " ";
    }
return 0;
}
4.Even values in list
#include <iostream>
#include <vector>
using namespace std;

int main() {
    int n;
    cin >> n;
    vector<int> e(n);
    
    for(int i = 0; i < n; i++) {
        cin >> e[i];
    }

    for(int i = 0; i < n; i++) {
        if(e[i] % 2 == 0) {
            cout << e[i] << " ";
        }
    }

    return 0;
}

5.Conctenate two strings
// You are using GCC
#include<iostream>
using namespace std;
int main()
{
    string str1,str2;
    cin>>str1>>str2;
   auto concatenate = [](string str1,string str2)
    {
        return str1+" "+str2;
    };
    cout<<concatenate(str1,str2);

}
    return 0;
}

