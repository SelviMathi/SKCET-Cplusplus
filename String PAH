1.String compare
// You are using GCC
#include<iostream>
using namespace std;
int main()
{
    char str1[100],str2[100];
    cin>>str1>>str2;
    int index=0;
    while (str1[index]!='\0'&&str2[index]!='\0')
    {
        if(str1[index]!=str2[index])
            {  cout<<"Strings are not same";
              return 0;
             } index++;
    }
    if(str1[index]=='\0' &&str2[index]=='\0')
cout<<"Strings are same";
else
    cout<<"Strings are not same";
    return 0;
}

2.String copy

// You are using GCC
// You are using GCC
#include<iostream>
using namespace std;
int main()
{
    char str1[100],str2[100];
    cin>>str1;
    int index=0;
    while (str1[index]!='\0')
    {
        str2[index]=str1[index];
        index++;
    }
    str2[index]='\0';
   cout<<str2;
    return 0;
}

3.Palindrome

#include<iostream>
#include<cstring>
using namespace std;
int main()
{
    char str1[100],str2[100];
    cin>>str1;
    int index=0;
    while (str1[index]!='\0')
    {
        str2[index]=str1[index];
        index++;
    }
    str2[index]='\0';
    int start=0,end=strlen(str1)-1;
    while (start<end)
    {
        char temp=str1[start];
        str1[start]=str1[end];
        str1[end]=temp;
        start++;
        end--;
        
    }
    if(strcmp(str1,str2)==0)
    cout<<"Palindrome";
    else
    cout<<"Not a Palindrome";
    return 0;
}
4.string lowercase
// You are using GCC

#include<iostream>
#include<cstring>
using namespace std;
int main()
{
    char str1[100];
    cin>>str1;
    int index=0;
    while (str1[index]!='\0')
    {
        str1[index]+=32;
        index++;
    }
    cout<<"String with lowercase is "<<str1;
    return 0;
}
5.count no of vowels

#include<iostream>
#include<cstring>
using namespace std;
int main()
{
    char str1[100];
    cin>>str1;
    int index=0;
    while (str1[index]!='\0')
    {
        if(str1[index]=='a'||str1[index]=='e'||str1[index]=='i'||str1[index]=='o'||str1[index]=='u')
        index++;
    }
    cout<<"Number of vowels:"<<index;
    return 0;
}
6.Peter at challenge
7.Number Challenge

Mike set off with great zeal to the "Kracker Jack Fun Fair 2017". There were numerous activities in the fair, though Mike being a math expert, liked to participate in the Number Challenge.



Mike was given a string D of numbers containing only digits 0's and 1's. His challenge was to make the number have all the digits the same. For that, he should change exactly one digit, i.e. from 0 to 1 or from 1 to 0. If it is possible to make all digits equal (either all 0's or all 1's) by flipping exactly 1 digit then he has to output "Yes", else print "No" (without quotes).


8.Little Authors

"Little Authors" Slogan Writing Competition was organized for School students at Orchids Senior School. Any student who is creative and effective in communicating ideas in short, yet powerful about any instant topic can participate in the competition. The important guideline for the contest is that the Slogan should contain a string where the number of occurrences of some character in it is equal to the sum of the numbers of occurrences of other characters in the string. 

 

Write a program to help the event organizers to determine whether the submitted Slogans adhere to the given condition.
9.Balls for Challenge

The Circoloco Children Carnival is the Cityâ€™s largest and most successful event dedicated to children and families. The main focus at the carnival is the workshop arena where kids can participate in engaging and educational activities.

 

Charlie, a little boy accompanied by his Mom visited the fair, where he participated in the "Balls for Challenge" activity. He was given many balls of white and black colors. During the play, he arranged the balls into two rows both consisting of N number of balls. These two rows of balls are given to you in the form of strings X, Y. Both these strings consist of 'W' and 'B', where 'W' denotes a white-colored ball and 'B' a black colored.



Other than these two rows of balls, Charlie has an infinite supply of extra balls of each color. He wants to create another row of N balls, Z in such a way that the sum of Hamming distance between X and Z, and hamming distance between Y and Z is maximized.



Hamming Distance between two strings X and Y is defined as the number of positions where the color of balls in row X differs from the row Y ball at that position. e.g. Hamming distance between "WBB", "BWB" is 2, as, at positions 1 and 2, corresponding colors in the two strings differ. As there can be multiple such arrangements of row Z, Charlie wants you to find the lexicographically smallest arrangement which will maximize the above value.



Input format :
The first line of the input will contain a string X denoting the arrangement of balls in the first row.

The second line of the input will contain the string Y denoting the arrangement of balls in the second row.

Output format :
Output a single line containing the string of length N denoting the arrangement of colors of the balls belonging to row Z.

Sample test cases :
Input 1 :
WBWB
WBBB
Output 1 :
BWWW

10.Delete vowel

