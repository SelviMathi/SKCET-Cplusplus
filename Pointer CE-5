1.Search

#include<iostream>
using namespace std;
void search (int *x,int n,int num)
{
    int i, f=0,ind;
    for (i=0;i<n;i++)
    {
        if ( *(x+i) == num)
        {
            f=1;
            ind = i;
            break;
        }
    }
    if (f==1)
        cout<<num<<" is found at index "<<ind<<endl;
        
    else
        cout<<"Not found\n";
        
}
int main()
{
    int size,i,num;
    cin>>size;
    
    int arr[size];
    int  *ptr=arr;
    for (i=0;i<size;++i)
            cin>>*(ptr+i);
    cin>>num;
    search(arr,size,num);
    return 0;
}

2. Quotient/Remainder

#include <iostream>
using namespace std;

int main()
{
    int num1,num2,*p1,*p2,quo,rem;
    cin>>num1;
    cin>>num2;
    
    p1=&num1;
    p2=&num2;
    quo =*p1/ *p2;
    rem =*p1% *p2;
    cout<<quo<<" "<<rem;
    return 0;
}

3.Diff between Max/Min


#include<iostream>
using namespace std;
int Max_diff(int * arr,int sz)
{
   int* max=arr;
    int* min=arr;
    for(int* ptr=arr+1;ptr<arr+sz;++ptr)
    {
    if(*ptr > *max)
    max=ptr;
    if(*ptr < *min)
    min=ptr;
    }
    return *max - *min;
}

int main()
{
    int size;
    cin>>size;
    int * array=new int[size];
    for(int index=0;index<size;index++)
    cin>> *(array+index);
    cout<<Max_diff(array,size);
    delete[] array;
return 0;
}

4. Replace a with *

// You are using GCC
#include<iostream>
using namespace std;

int main()
{
char word[100],*ptr;
cin.get(word,100);
ptr=word;
for(;*ptr!='\0';ptr++)
{
    if(*ptr=='a')
    *ptr='*';
}
cout<<word;
return 0; 
}

5.Sort the string
#include <iostream>
#include <cstring>
using namespace std;

void reorder(int n, char *x[]);

int main()
{
    char *x[20];
    int n = 0;

    cin >> n;
    
    for (int i = 0; i < n; i++) {
        x[i] = new char[20];  
        cin >> x[i];
    }

    reorder(n, x);

    for (int i = 0; i < n; i++) {
        cout << (i + 1) << " " << x[i] << endl;
    }

    for (int i = 0; i < n; i++) {
        delete[] x[i];
    }

    return 0;
}

void reorder(int n, char *x[])
{
    char t[20];
    for (int i = 0; i < n - 1; i++) {
        for (int j = i + 1; j < n; j++) {
            if (strcmp(x[i], x[j]) > 0) {
                strcpy(t, x[i]);
                strcpy(x[i], x[j]);
                strcpy(x[j], t);
            }
        }
    }
}

    
